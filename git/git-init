$ git init 
命令把这个目录变成Git可以管理的仓库
$ git add <file>
$ git commit -m "readme"
$ git status
$ git diff <file>
比较查看file的修改

在Git中，用HEAD表示当前版本,上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100

$ git reset --hard HEAD^/$ git reset --hard <hashno>
回退到上一个版本/某一个版本

git reset HEAD file
可以把暂存区的修改撤销掉（unstage），重新放回工作区

$ git reflog
用来记录你每一次命令

$ git log
查看提交历史

git有暂存区的概念 git add后将修改加入暂存区 git commit后将暂存区的修改提交到版本裤Repository, git 管理的是修改而不是文件（重要），可以参考：https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001374829472990293f16b45df14f35b94b3e8a026220c5000
 
git diff HEAD -- readme.txt
命令可以查看工作区和版本库里面最新版本的区别

git checkout -- file
可以丢弃工作区的修改/恢复版本库中还有但是工作区误删除的文件

git checkout branch
切换到另一个分支

git rm file+git commit
删除文件


